{"version":3,"sources":["components/Search/Search.js","apiConfig.js","components/WorkSpace/WorkSpaceButton.js","components/PlacesDetail/PlacesDetail.js","components/GoogleMap/GoogleMap.js","components/Review/ReviewCreate.js","api/auth.js","components/SignUp/SignUp.js","components/SignIn/SignIn.js","components/ChangePassword/ChangePassword.js","components/SignOut/SignOut.js","components/Header/Header.js","components/NavBar/NavBar.js","components/Review/Review.js","components/WorkSpace/WorkSpace.js","components/SuggestionsList/SuggestionsList.js","components/WorkSpace/WorkSpaceCreate.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Search","props","setQuery","query","setState","handleAutocompleteSelect","a","geocodeByAddress","results","getLatLng","searchLocation","setApp","mapCenter","placeData","state","value","this","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","className","style","height","width","fontSize","placeholder","map","suggestion","active","backgroundColor","cursor","description","React","Component","GoogleApiWrapper","apiKey","process","apiUrls","apiUrl","window","location","hostname","WorkSpaceButton","url","test","geocodeByPlaceId","placeId","to","PlacesDetail","placeImage","photos","getUrl","alt","src","name","reference","GoogleMap","componentDidMount","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","userLocation","axios","then","data","allData","work_spaces","placeDetails","setPlaceData","getPlaceDetails","fields","google","maps","places","PlacesService","getDetails","setNewLocation","poiLocation","onMarkerClick","marker","event","place_id","selectedMarker","showWindow","currentWorkspace","history","push","onInfoWindowClose","showPOI","latLng","service","console","log","status","navigateHome","pathname","handleClick","showSuggestions","center","initialCenter","zoom","clickableIcons","onClick","position","icon","visible","workSpace","key","id","withRouter","ReviewCreate","handleChange","target","handleSubmit","preventDefault","method","review","work_space_id","rating","noise","bathroom","seating","coffee","outlet","food","wifi","note","headers","Authorization","user","token","display","catch","alert","closeWindow","redirect","placeName","float","href","website","rel","Form","onSubmit","Group","Label","htmlFor","Control","type","min","max","marginBottom","padding","Check","label","checked","as","Button","signIn","credentials","email","password","SignUp","onSignUp","setUser","password_confirmation","passwordConfirmation","res","error","controlId","required","variant","SignIn","onSignIn","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","SignOut","clearUser","signOut","finally","authenticatedOptions","Nav","Link","unauthenticatedOptions","alwaysOptions","Header","Navbar","collapseOnSelect","fixed","bg","expand","Brand","color","Collapse","NavBar","show","Review","borderStyle","WorkSpace","filters","notshow","photo","reviews","length","textAlign","average","array","answer","i","Math","round","overall","bath","parseInt","outletStyle","coffeeStyle","foodStyle","accept","textDecoration","border","margin","SuggestionsList","Modal","Dialog","closeButton","Title","Body","ListGroup","item","Item","WorkSpaceCreate","work_space","App","bounds","workSpaceId","path","render","exact","bind","coordinates","Boolean","match","appJsx","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5415181d.chunk.js","sourcesContent":["import React from 'react'\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'\nimport {GoogleApiWrapper} from 'google-maps-react'\nimport './Search.scss'\n\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: ''\n        }\n    }\n\n// set query to find Place data\nsetQuery = query => {\n    this.setState({ query })\n}\n\n// send query to find Place data\n// use Place data to get coordinates\n// update state with coordinates and Place data\nhandleAutocompleteSelect = async query => {\n    const results = await geocodeByAddress(query)\n    const searchLocation = await getLatLng(results[0])\n    this.props.setApp({ searchLocation,\n                        mapCenter: searchLocation })\n    this.props.setApp({ placeData: results[0] })\n    this.setState({ query: '' })\n}\n\nrender() {\n    return (\n        <PlacesAutocomplete\n        value={this.state.query}\n        onChange={this.setQuery}\n        onSelect={this.handleAutocompleteSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <div className='search-bar'>\n          <input\n            style={{ height: '40px', width: '100%', fontSize: '16px' }}\n            {...getInputProps({\n              placeholder: 'Search Places ...',\n              className: 'location-search-input',\n            })}\n          />\n          <div className=\"autocomplete-dropdown-container\">\n            {loading && <div>Loading...</div>}\n            {suggestions.map(suggestion => {\n              const className = suggestion.active\n                ? 'suggestion-item--active'\n                : 'suggestion-item';\n              // inline style for demonstration purpose\n              const style = suggestion.active\n                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                : { backgroundColor: '#ffffff', cursor: 'pointer' };\n              return (\n                <div\n                  {...getSuggestionItemProps(suggestion, {\n                    className,\n                    style,\n                  })}\n                >\n                  <span>{suggestion.description}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n      </PlacesAutocomplete>\n    )\n}\n}\n\n\n\nexport default GoogleApiWrapper({\n  apiKey: (process.env.REACT_APP_GOOGLE_API_KEY)\n})(Search)\n","let apiUrl\nconst apiUrls = {\n  production: 'https://warm-chamber-62945.herokuapp.com/',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\n// hack to access production api from localhost\n// commment out or remove this line to access development api\n// apiUrl = apiUrls.production\n\nexport default apiUrl\n","import React from 'react'\nimport { geocodeByPlaceId } from 'react-places-autocomplete'\nimport { HashRouter, Link } from 'react-router-dom'\n\n\nclass WorkSpaceButton extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: true\n        }\n    }\n\n    componentDidMount() {\n        geocodeByPlaceId(this.props.placeId)\n            // .then(console.log)\n    }\n\n    url = 'http://localhost:3000'\n\n    // executeTest = () => {\n    //     console.log('WorkSpace Button')\n    // }\n\n    // render information inside an infoWindow for POI\n\n    render() {\n        return (\n            <HashRouter>\n                <Link to='/create-workspace'>\n                    <button>Create A WorkSpace</button>\n                </Link>\n            </HashRouter>\n\n        )\n    }\n}\n\nexport default WorkSpaceButton\n","import React from 'react'\nimport WorkSpaceButton from '../WorkSpace/WorkSpaceButton'\nimport PropTypes from 'prop-types'\n\nclass PlacesDetail extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: true\n        }\n    }\n\n    render() {\n        let placeImage = ''\n        // if data does not have any photos, display 'no image found' image\n        if (this.props.placeData && !this.props.placeData.photos) {\n            placeImage = 'https://1m19tt3pztls474q6z46fnk9-wpengine.netdna-ssl.com/wp-content/themes/unbound/images/No-Image-Found-400x264.png'\n        }\n        // if data includes photos, get url of the first photo\n        if (this.props.placeData && this.props.placeData.photos) {\n            placeImage = this.props.placeData.photos[0].getUrl()\n        }\n        let jsx\n        if (this.props.placeData) {\n            jsx = (\n                <div>\n\n                    <img height={'200px'} alt={'pic'} src={placeImage} />\n                    <h1>{this.props.placeData.name}</h1>\n                    <p><strong>google place_id: </strong>{this.props.placeData.reference || 'unknown'}</p>\n\n                    <WorkSpaceButton placeId={this.props.placeData.reference}/>\n                </div>\n            )\n        } else {\n            jsx = (\n                <div>\n                    <h3>Loading...</h3>\n                </div>\n            )\n        }\n        return jsx\n    }\n}\n\nPlacesDetail.propTypes = {\n    placeData: PropTypes.object\n}\n\nexport default PlacesDetail\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react'\n\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\n\nimport PlacesDetail from '../PlacesDetail/PlacesDetail'\n// import SuggestionsList from './SuggestionsList/SuggestionsList.js'\n\n\nclass GoogleMap extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            selectedMarker: null,\n            showWindow: false,\n            allData: [],\n            showPOI: false\n        }\n    }\n\n    // Using geolocation from browser to location user location\n    componentDidMount = () => {\n      if(navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n        // console.log('found user location')\n        const coords = pos.coords\n        const lat = coords.latitude\n        const lng = coords.longitude\n        this.props.setApp({ userLocation: { lat, lng },\n                            mapCenter: { lat, lng } })\n        })\n      }\n      axios(apiUrl + '/work_spaces')\n        .then(data => {\n            // console.log(data)\n            this.props.setApp({ allData: data.data.work_spaces })\n        })\n    }\n\n    placeDetails = ['name', 'website', 'formatted_phone_number', 'formatted_address', 'photo', 'reference', 'reviews']\n\n    setPlaceData = placeData => {\n        this.props.setApp({ placeData })\n    }\n\n    getPlaceDetails = (map, placeId) => {\n        const fields = this.placeDetails\n        const service = new this.props.google.maps.places.PlacesService(map)\n        service.getDetails({ placeId, fields }, this.setPlaceData)\n    }\n\n    setNewLocation = (location, placeId) => {\n        this.props.setApp({\n            poiLocation: location,\n            mapCenter: location,\n            placeData: null,\n            placeId\n        })\n    }\n\n      // onClick handler to set marker to state and show corresponding info window\n    onMarkerClick = (props, marker, event) => {\n        const lat = props.data.lat\n        const lng = props.data.lng\n        const placeId = marker.data.place_id\n        this.setState({ selectedMarker: marker, showWindow: true })\n        // console.log(marker.data)\n        this.props.setApp({ currentWorkspace: marker.data, placeData: null })\n        this.setNewLocation({ lat, lng }, placeId)\n        this.getPlaceDetails(props.map, placeId)\n        this.props.history.push('/workspace')\n    }\n\n    // onClose handler for InfoWindow\n    onInfoWindowClose = () => {\n        this.setState({ showWindow: false })\n    }\n\n    showPOI = (map, event) => {\n        // declare function to handle data returned from service.getDetails()\n        const handleData = (data, status) => {\n            // save data from places details to state.placeData\n            this.props.setApp({placeData: data})\n        }\n\n        // save the click location and reset place data\n\n        this.props.setApp({\n            poiLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() },\n            mapCenter: { lat: event.latLng.lat(), lng: event.latLng.lng() },\n            placeData: null,\n            placeId: event.placeId\n        })\n        // create new instance of class PlacesService to access google places api\n        const service = new this.props.google.maps.places.PlacesService(map)\n        console.log('service is:', service)\n\n        // call getDetails from google places api, passing placeId, fields to get data for, and above callback function to handle the response\n        service.getDetails(\n            {\n                placeId: event.placeId,\n                fields: ['name', 'website', 'formatted_phone_number', 'formatted_address', 'photo', 'reference', 'reviews']\n            },\n            handleData\n        )\n    }\n\n    navigateHome = () => {\n        // unless already '/' navigate to '/'\n        if (this.props.location.pathname !== '/') {\n            this.props.history.push('/')\n        }\n        // close infowindow (if open)\n        if (this.state.showWindow) {\n            this.setState({ showWindow: false })\n        }\n        if (this.state.showPOI) {\n            this.setState({ showPOI: false })\n        }\n    }\n\n    handleClick = (props, map, event) => {\n        // if click event has a place id, get details on place and save data to state\n        if(event.placeId) {\n            // first save the location and place id to state. Clear data for place image and place data\n            this.setState({ showPOI: true })\n            this.showPOI(map, event)\n\n        } else {\n            this.navigateHome()\n        }\n\n    }\n\n    showSuggestions = () => {\n      this.props.history.push('/suggestions')\n    }\n\n    render() {\n        return (\n            <Map google={this.props.google}\n             center={this.props.center}\n             initialCenter={this.props.center}\n             zoom={14}\n             clickableIcons={true}\n\n             onClick={this.handleClick}\n            >\n            <Marker\n              name={'user location'}\n              position={this.userLocation}\n              icon={{url:'http://maps.google.com/mapfiles/ms/icons/green-dot.png'}}\n            />\n\n            <Marker name={'search result'}\n                    position={this.props.searchLocation}\n                    icon={{url:'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'}}\n                    onClick={this.showSuggestions}\n                    />\n\n                {/* info window for poi locations */}\n                <InfoWindow\n                    position={this.props.poiLocation}\n                    visible={this.state.showPOI}\n                >\n                    <PlacesDetail placeData={this.props.placeData} />\n                </InfoWindow>\n\n                {this.props.allData.map(workSpace => (\n                    <Marker\n                        key={workSpace.id}\n                        onClick={this.onMarkerClick}\n                        position={{ lat: workSpace.lat, lng: workSpace.lng}}\n                        placeId={workSpace.placeId}\n                        data={workSpace}\n                        name={'Current location'}\n                    />\n                ))}\n\n\n                {/* InfoWindow becomes visible when this.state.showWindow === true */}\n                {// <InfoWindow marker={this.state.selectedMarker}\n                //         visible={this.state.showWindow}\n                //         onClose={this.onInfoWindowClose}\n                // >\n                //     {/* Display placeData information inside InfoWindow */}\n                //     <TestComponent placeData={this.props.placeData} />\n                //\n                // </InfoWindow>\n              }\n\n            </Map>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (process.env.REACT_APP_GOOGLE_API_KEY)\n  })(withRouter(GoogleMap))\n","import React from 'react';\nimport './ReviewForm.scss'\nimport { Link, Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\n\n// import TestButton from '../TestButton'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n  class ReviewCreate extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        work_space_id: props.currentWorkspace.id,\n        rating: 3,\n        review: '',\n        wifi: '',\n        noise: 3,\n        bathroom: 3,\n        coffee: '',\n        food: '',\n        outlet: '',\n        seating: '',\n        display: 'block',\n        redirect: false\n      }\n    }\n\n    componentDidMount(props) {\n      console.log('reviewform data: ' + this.props.placeData)\n    }\n\n    handleChange = (event) => {\n      this.setState({ [event.target.name]: event.target.value })\n      // console.log(event.target.value)\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n\n        axios({\n          method: 'post',\n          url: apiUrl + '/reviews',\n          data: {\n            review: {\n              work_space_id: this.state.work_space_id,\n              rating: this.state.rating,\n              noise: this.state.noise,\n              bathroom: this.state.bathroom,\n              seating: this.state.seating,\n              coffee: this.state.coffee,\n              outlet: this.state.outlet,\n              food: this.state.food,\n              wifi: this.state.wifi,\n              note: this.state.review\n            }\n          },\n          headers: {\n            Authorization: `Token token=${this.props.user.token}`\n          }\n        })\n        .then(data => {\n          // console.log(data)\n          this.setState({ display: 'none' })\n        })\n      // 3. redirect to '/' and close the review form\n      .catch(() => alert('create review failed'))\n    }\n\n    closeWindow = () => {\n      // update state which updates component's style to display: none\n      this.setState({ display: 'none' })\n    }\n\n    render () {\n      let placeName = ''\n      // if user is not signed in, redirect to '/sign-in'\n\n      if (this.props.placeData && this.props.placeData.name) {\n        placeName = this.props.placeData.name\n      }\n\n      let placeImage = ''\n\n      if (this.props.placeData && this.props.placeData.photos) {\n        placeImage =  this.props.placeData.photos[0].getUrl()\n\n}\n\n\n      // console.log(placeImage)\n\n        if (!this.props.user) {\n          return (<Redirect to='/sign-in'/>)\n        }\n\n        if (this.state.display === 'none') {\n          return (<Redirect to='/'/>)\n        }\n\n      return (\n\n          <div className='review-form' style={{display: this.state.display}}>\n\n          <Link to='/'>\n            <button style={{float: 'right'}} onClick={this.closeWindow}>Close</button>\n          </Link>\n\n          <h1> Review {placeName}</h1>\n\n          <a href={this.props.placeData.website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img height={'100px'} alt={'pic'} src={placeImage} />\n          </a>\n      <div className=\"review-scroll\">\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Label htmlFor=\"name\">Overall Rating:</Form.Label>\n          <Form.Control\n            type=\"range\"\n            min=\"0\"\n            max=\"5\"\n            value={this.state.rating}\n            name=\"rating\"\n            onChange={this.handleChange}\n          />\n          <span>{this.state.rating}</span>\n        </Form.Group>\n        <h3 style={{ marginBottom: '0px' }}>Did it have...</h3>\n        <div style={{ display: 'flex' }}>\n        <div style={{ padding: '0px 15px 0px 15px' }}>\n        <Form.Group>\n          <Form.Label htmlFor=\"outlet\"><h5>Outlets</h5></Form.Label>\n          <Form.Check\n            type=\"radio\"\n            label=\"YES\"\n            value=\"5\"\n            checked={this.state.outlet === '5'}\n            name=\"outlet\"\n            onChange={this.handleChange}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"NO\"\n            value=\"0\"\n            checked={this.state.outlet === '0'}\n            name=\"outlet\"\n            onChange={this.handleChange}\n          />\n          </Form.Group>\n          </div>\n          <div style={{ padding: '0px 15px 0px 15px' }}>\n        <Form.Group>\n          <Form.Label htmlFor=\"coffee\"><h5>Coffee</h5></Form.Label>\n          <Form.Check\n            type=\"radio\"\n            label=\"YES\"\n            value=\"5\"\n            checked={this.state.coffee === '5'}\n            name=\"coffee\"\n            onChange={this.handleChange}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"NO\"\n            value=\"0\"\n            checked={this.state.coffee === '0'}\n            name=\"coffee\"\n            onChange={this.handleChange}\n          />\n          </Form.Group>\n          </div>\n          <div style={{ padding: '0px 15px 0px 15px' }}>\n          <Form.Group>\n            <Form.Label htmlFor=\"food\"><h5>Food</h5></Form.Label>\n            <Form.Check\n              type=\"radio\"\n              label=\"YES\"\n              value=\"5\"\n              checked={this.state.food === '5'}\n              name=\"food\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"NO\"\n              value=\"0\"\n              checked={this.state.food === '0'}\n              name=\"food\"\n              onChange={this.handleChange}\n            />\n            </Form.Group>\n            </div>\n            </div>\n        <Form.Group>\n          <Form.Label htmlFor=\"wifi\"><h3>How was the Wifi??</h3></Form.Label>\n          <Form.Check\n            type=\"radio\"\n            label=\"NONE\"\n            value=\"0\"\n            checked={this.state.wifi === '0'}\n            name=\"wifi\"\n            onChange={this.handleChange}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"POOR\"\n            value=\"1\"\n            checked={this.state.wifi === '1'}\n            name=\"wifi\"\n            onChange={this.handleChange}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"MODERATE\"\n            value=\"2.5\"\n            checked={this.state.wifi === '2.5'}\n            name=\"wifi\"\n            onChange={this.handleChange}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"AMPLE\"\n            value=\"5\"\n            checked={this.state.wifi === '5'}\n            name=\"wifi\"\n            onChange={this.handleChange}\n          />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"name\"><h3>How noisy was it?</h3></Form.Label>\n            <Form.Check\n              type=\"radio\"\n              label=\"QUIET\"\n              value=\"1\"\n              checked={this.state.noise === '1'}\n              name=\"noise\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"MODERATE\"\n              value=\"2.5\"\n              checked={this.state.noise === '2.5'}\n              name=\"noise\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"LOUD\"\n              value=\"5\"\n              checked={this.state.noise === '5'}\n              name=\"noise\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"name\"><h4>How were the bathrooms?</h4></Form.Label>\n            <Form.Check\n              type=\"radio\"\n              label=\"There were none!\"\n              value=\"0\"\n              checked={this.state.bathroom === '0'}\n              name=\"bathroom\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Don't Squat here!\"\n              value=\"1\"\n              checked={this.state.bathroom === '1'}\n              name=\"bathroom\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"USABLE\"\n              value=\"2.5\"\n              checked={this.state.bathroom === '2.5'}\n              name=\"bathroom\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"PRISTINE\"\n              value=\"5\"\n              checked={this.state.bathroom === '5'}\n              name=\"bathroom\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"seating\"><h5>What was the seating like?</h5></Form.Label>\n            <Form.Check\n              type=\"radio\"\n              label=\"NONE\"\n              value=\"0\"\n              checked={this.state.seating === '0'}\n              name=\"seating\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Very Little\"\n              value=\"1\"\n              checked={this.state.seating === '1'}\n              name=\"seating\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Not Bad\"\n              value=\"2.5\"\n              checked={this.state.seating === '2.5'}\n              name=\"seating\"\n              onChange={this.handleChange}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"PLENTY OF SPACE\"\n              value=\"5\"\n              checked={this.state.seating === '5'}\n              name=\"seating\"\n              onChange={this.handleChange}\n            />\n            </Form.Group>\n          <Form.Group>\n          <Form.Label htmlFor=\"name\"><h5>Write a review (optional)</h5></Form.Label>\n          <Form.Control\n            style={{ height: '50px', width: '250px' }}\n            type=\"text\"\n            as=\"textarea\"\n            placeholder=\"Enter Review...\"\n            value={this.state.review}\n            name=\"review\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Button type=\"submit\"> Submit </Button>\n        </Form>\n        </div>\n      </div>\n      )\n    }\n  }\n\n\n\n\n  export default ReviewCreate;\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = credentials => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = credentials => {\n  return axios({\n    url: apiUrl + '/sign-in',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios({\n    url: apiUrl + '/sign-out',\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Token token=${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password',\n    method: 'PATCH',\n    headers: {\n      'Authorization': `Token token=${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport '../popUp.scss'\n\nclass SignUp extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onSignUp = event => {\n    event.preventDefault()\n\n    const { history, setUser } = this.props\n\n    signUp(this.state)\n      .then(() => signIn(this.state))\n      .then(res => setUser(res.data.user))\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ email: '', password: '', passwordConfirmation: '' })\n      })\n      console.log('signUp: ' + this.state.email)\n  }\n\n  render () {\n    const { email, password, passwordConfirmation } = this.state\n\n    return (\n      <div className=\"row body popup\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <Link to='/'>\n            <button style={{float: 'right'}} onClick={this.closeWindow}>Close</button>\n          </Link>\n          <h3>Sign Up</h3>\n          <Form onSubmit={this.onSignUp}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"passwordConfirmation\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                required\n                name=\"passwordConfirmation\"\n                value={passwordConfirmation}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SignUp)\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport '../popUp.scss'\n\nclass SignIn extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onSignIn = event => {\n    event.preventDefault()\n    const { history, setUser } = this.props\n    signIn(this.state)\n      .then(res => setUser(res.data.user))\n      .then(() => history.push('/'))\n      .then(() => alert('You have Signed In'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ email: '', password: '' })\n      })\n      console.log('SignIn: ' + this.state.email)\n  }\n\n  render () {\n    const { email, password } = this.state\n\n    return (\n      <div className=\"row popup\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <Link to='/'>\n            <button style={{float: 'right'}} onClick={this.closeWindow}>Close</button>\n          </Link>\n          <h3>Sign In</h3>\n          <Form onSubmit={this.onSignIn}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SignIn)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport '../popUp.scss'\n\nclass ChangePassword extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onChangePassword = event => {\n    event.preventDefault()\n\n    const { history, user } = this.props\n\n    changePassword(this.state, user)\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ oldPassword: '', newPassword: '' })\n      })\n  }\n\n  render () {\n    const { oldPassword, newPassword } = this.state\n\n    return (\n      <div className=\"row popup\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <h3>Change Password</h3>\n          <Form onSubmit={this.onChangePassword}>\n            <Form.Group controlId=\"oldPassword\">\n              <Form.Label>Old password</Form.Label>\n              <Form.Control\n                required\n                name=\"oldPassword\"\n                value={oldPassword}\n                type=\"password\"\n                placeholder=\"Old Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"newPassword\">\n              <Form.Label>New Password</Form.Label>\n              <Form.Control\n                required\n                name=\"newPassword\"\n                value={newPassword}\n                type=\"password\"\n                placeholder=\"New Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ChangePassword)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n      console.log('Signout worked!!')\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport './Header.css'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <Nav.Link href=\"#change-password\">Change Password</Nav.Link>\n    <br /><br />\n    <Nav.Link href=\"#sign-out\">Sign Out</Nav.Link>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <Nav.Link href=\"#sign-up\">Sign Up</Nav.Link>\n    <br /><br />\n    <Nav.Link href=\"#sign-in\">Sign In</Nav.Link>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <Nav.Link href=\"#/\">Home</Nav.Link><br /><br />\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar className=\"header\" collapseOnSelect fixed=\"top\" bg=\"secondary\" variant=\"dark\" expand=\"md\">\n    <Navbar.Brand href=\"#\">\n      WorkFromRoam\n    </Navbar.Brand>\n    <Nav>\n      { user && <span style={{ color: 'black' }} className=\"navbar-text mr-2\">Welcome, {user.email}</span>}\n    </Nav>\n    <br />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"ml-auto\">\n        { alwaysOptions }\n        { user ? authenticatedOptions : unauthenticatedOptions }\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","import React from 'react'\nimport { HashRouter, Link, withRouter } from 'react-router-dom'\n\nimport './NavBar.scss'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            show: true\n        }\n    }\n    handleClick = event => {\n      this.setState({ show: !this.state.show })\n    }\n\n    render() {\n      let redirect = ''\n      if (this.props.location.pathname === '/') {\n        redirect = '/nav'\n      } else {\n        redirect ='/'\n      }\n        return (\n            <HashRouter>\n              <Link to={redirect}>\n                <img onClick={this.handleClick} className=\"nav-bar\" src=\"ROME.png\" alt=\"nav-bar\" />\n              </Link>\n            </HashRouter>\n        )\n    }\n}\n\nexport default withRouter(NavBar)\n","import React from 'react'\n\nclass Review extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: true\n        }\n    }\n\n    // render information inside an infoWindow for POI\n    render() {\n        return (\n            <div style={{ borderStyle: 'double'}}>\n            <p>User Rating: {this.props.rating}</p>\n              <p>Note: {this.props.note}</p>\n            </div>\n        )\n    }\n}\n\nexport default Review\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\n\nimport Review from '../Review/Review'\n\nimport './WorkSpace.scss'\n\n// import TestButton from './TestButton'\n\n\nclass WorkSpace extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: true,\n            filters: false\n        }\n    }\n\n    // Function to show more filters\n   show = () => {\n      this.setState({ filters: true })\n    }\n    // Function to show less filters\n    notshow = () => {\n       this.setState({ filters: false })\n     }\n\n\n    // render information inside an infoWindow for POI\n    render() {\n      let photo = '../../loading-cat.gif'\n      if (this.props.placeData && this.props.placeData.photos) {\n        photo = this.props.placeData.photos[0].getUrl()\n      }\n\n      if(this.props.data.reviews.length < 1) {\n        return (\n            <div className='workspace'>\n              <Link to='/'>\n                <h5 style={{ float: 'right' }}>X</h5>\n              </Link>\n              <div style={{ textAlign: 'center' }}>\n                <h3>Be the first to write a  <Button\n                data={this.props.data.id}\n                href={`#work_spaces/${this.props.data.id}/create-review`}\n              >\n                Review\n              </Button> for</h3>\n                <h3>{this.props.placeData && this.props.placeData.name}</h3>\n              </div>\n            </div>)\n      }\n\n    // Function for averaging the different amenities for Review\n      let average = function(array) {\n        let answer = 0\n        let length = array.length\n        for(let i = 0; i < array.length; i++) {\n          answer += array[i]\n        }\n        return Math.round(answer/length)\n      }\n      // Overall average rating for workSpace\n      let overall = average(this.props.data.reviews.map(review => review.rating))\n      // Bathroom average rating\n      let bath = average(this.props.data.reviews.map(review => review.bathroom))\n      // Noise level average Rating\n      let noise = average(this.props.data.reviews.map(review => review.noise))\n      // Wifi average rating\n      let wifi = average(this.props.data.reviews.map(review => parseInt(review.wifi)))\n      // Seating average Rating\n      let seating = average(this.props.data.reviews.map(review => parseInt(review.seating)))\n      // Outlets average rating\n      let outlet = average(this.props.data.reviews.map(review => parseInt(review.outlet)))\n      // Coffee average Rating\n      let coffee = average(this.props.data.reviews.map(review => parseInt(review.coffee)))\n      // Food average rating\n      let food = average(this.props.data.reviews.map(review => parseInt(review.food)))\n\n      // Style booleans for showing filter options as being available or not\n      let outletStyle = false\n      let coffeeStyle = false\n      let foodStyle = false\n\n      // Conditionals for showing if filters are available\n      if(outlet > 0) {\n        console.log(outlet)\n        outletStyle = true\n      }\n      if(coffee > 0) {\n        coffeeStyle = true\n      }\n      if(food > 0) {\n        foodStyle = true\n      }\n\n        return (\n            <div className='workspace' style={this.state.display}>\n              <Link to='/'>\n                <h5 style={{ float: 'right' }}>X</h5>\n              </Link>\n                <br />\n                <br />\n                <br />\n              <div>\n                <img accept=\"*/*\" height='150px' alt=\"work_space_pic\" src={photo} />\n              </div>\n                <br />\n              <div className=\"work-space-div\">\n                <div>\n                  <h4 style={{ color: 'black' }}><a\n                    className=\"link\"\n                    style={{ textDecoration: 'none' }}\n                    href={this.props.placeData && this.props.placeData.website}\n                    target='_blank'\n                    rel=\"noopener noreferrer\"\n                    >\n                    {this.props.placeData && this.props.placeData.name}\n                    </a> - Rating: {overall}<br />Address here<br />Hours here</h4>\n\n                </div>\n                <div>\n                  <h5>WIFI: {wifi}</h5>\n                  <h5>Noise: {noise}</h5>\n                  <h5>Seating: {seating}</h5>\n                  <h5>Bathroom: {bath}</h5>\n                  {!this.state.filters && <button\n                    style={{ float: 'right', border: 'none' }}\n                    onClick={this.show}\n                  >\n                  more\n                  </button>}\n                  {this.state.filters &&\n                    <div>\n                      <button\n                        onClick={this.notshow}\n                        style={{ float: 'right', border: 'none' }}>\n                      less\n                      </button>\n                      <br />\n                      <br />\n                      <div style={{ display: 'flex' }}>\n                        <button id=\"outlets\" style={{ margin: '10px', color: outletStyle ? 'red' : 'blue' }}>outlets</button>\n                        <button id=\"coffee\" style={{ margin: '10px', color: coffeeStyle ? 'red' : 'blue' }}>coffee</button>\n                        <button id=\"food\" style={{ margin: '10px', color: foodStyle ? 'red' : 'blue' }}>food</button>\n                      </div>\n                    </div>}\n                </div>\n                <br />\n              <hr />\n                <div style={{ display: 'flex' }}>\n                  <div><h3 style={{ margin: '0px' }}>Reviews</h3></div>\n                  <div>\n                    <h4><Button\n                      style={{ float: 'right' }}\n                      data={this.props.data.id}\n                      href={`#work_spaces/${this.props.data.id}/create-review`}\n                    >\n                      Write a Review\n                    </Button></h4>\n                  </div>\n                </div>\n                <br />\n\n                <div className=\"scroll\" style={{ color: 'red', textAlign: 'center' }}>\n                {this.props.data.reviews.map(review => (\n                  <Review\n                    key={review.id}\n                    rating={review.rating}\n                    wifi={review.wifi}\n                    noise={review.noise}\n                    bathroom={review.bathroom}\n                    seating={review.seating}\n                    outlet={review.outlet}\n                    food={review.food}\n                    coffee={review.coffee}\n                    note={review.note}\n                  />\n                ))}\n                </div>\n              </div>\n\n            </div>\n        )\n    }\n}\n\nexport default WorkSpace\n","import React from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport './SuggestionsList.scss'\r\nclass SuggestionsList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      suggestions: '',\r\n    };\r\n  }\r\n  componentDidMount () {\r\n    console.log(this.props.data)\r\n  }\r\n  render (props) {\r\n    console.log(this.props.data)\r\n    return (\r\n      <div className='suggestions-list'>\r\n        <Modal.Dialog>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Suggested Workspaces\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <ListGroup>\r\n              {this.props.data.map(item => {\r\n                return (\r\n                  <ListGroup.Item>\r\n                    {item.id}\r\n                  </ListGroup.Item>\r\n                )\r\n              })\r\n             }\r\n            </ListGroup>\r\n          </Modal.Body>\r\n        </Modal.Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SuggestionsList\r\n","import React from 'react';\n// import '../popUp.scss'\nimport { Link, Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\n\n// import WorkSpaceButton from './WorkSpaceButton'\nimport './WorkSpace.scss'\n\n// import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n  class WorkSpaceCreate extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        work_space_id: '',\n        rating: 3,\n        review: '',\n        wifi: '',\n        noise: 3,\n        bathroom: 3,\n        coffee: '',\n        food: '',\n        outlet: '',\n        seating: '',\n        display: 'block',\n        redirect: false\n      }\n    }\n\n    componentDidMount(props) {\n      console.log('reviewform data' + this.props.placeData)\n    }\n\n    handleChange = (event) => {\n      this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n      // 1. create a workspace\n      axios({\n        method: 'post',\n        url: apiUrl + '/work_spaces',\n        data: {\n          work_space: {\n            place_id: this.props.placeId,\n            lat: this.props.location.lat,\n            lng: this.props.location.lng\n          }\n        },\n        headers: {\n          Authorization: `Token token=${this.props.user.token}`\n        }\n\n      })\n      this.closeWindow()\n    }\n\n    closeWindow = () => {\n      // update state which updates component's style to diplay: none\n      this.setState({ display: 'none' })\n    }\n\n    render () {\n      let placeName = ''\n      // if user is not signed in, redirect to '/sign-in'\n\n      if (this.props.placeData && this.props.placeData.name) {\n        placeName = this.props.placeData.name\n      }\n\n      let placeImage = ''\n\n      if (this.props.placeData && this.props.placeData.photos) {\n        placeImage =  this.props.placeData.photos[0].getUrl()\n\n}\n\n\n      console.log(placeImage)\n\n        if (!this.props.user) {\n          return (<Redirect to='/sign-in'/>)\n        }\n\n        if (this.state.display === 'none') {\n          return (<Redirect to='/'/>)\n        }\n\n      return (\n\n          <div className='popup' style={{display: this.state.display}}>\n\n          <Link to='/'>\n            <button style={{float: 'right'}} onClick={this.closeWindow}>Close</button>\n          </Link>\n\n          <h1> Review {placeName}</h1>\n          <Button type=\"submit\" onClick={this.handleSubmit}> Create New WorkSpace </Button>\n      </div>\n      )\n    }\n  }\n\n\n\n\n  export default WorkSpaceCreate;\n","import React, { Fragment } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport Search from '../Search/Search'\nimport GoogleMap from '../GoogleMap/GoogleMap'\nimport ReviewCreate from '../Review/ReviewCreate'\nimport SignUp from '../SignUp/SignUp'\nimport SignIn from '../SignIn/SignIn'\nimport ChangePassword from '../ChangePassword/ChangePassword'\nimport SignOut from '../SignOut/SignOut'\nimport Header from '../Header/Header'\nimport NavBar from '../NavBar/NavBar'\nimport WorkSpace from '../WorkSpace/WorkSpace'\nimport SuggestionsList from '../SuggestionsList/SuggestionsList.js'\nimport WorkSpaceCreate from '../WorkSpace/WorkSpaceCreate.js'\n\nimport './App.scss'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      allData: [],\n      poiLocation: null,\n      mapCenter: { lat: 42.3601, lng: -71.0589},\n      bounds: null,\n      placeId: null,\n      placeData: null,\n      searchLocation: null,\n      workSpaceId: null,\n      currentWorkspace: null,\n      user: null,\n      userLocation: null,\n\n    }\n  }\n\n  setUser = user => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n\n  render() {\n\n    const { user } = this.state\n\n    return (\n<div>\n<Fragment>\n\n        <Route path='/work_spaces/:id/create-review'>\n          <ReviewCreate\n            user={user}\n            placeId={this.state.placeId}\n            placeData={this.state.placeData}\n            location={this.state.poiLocation}\n            data={this.state.allData}\n            currentWorkspace={this.state.currentWorkspace}\n          />\n        </Route>\n\n        <Route path='/workspace' render={() => (\n           <WorkSpace\n              data={this.state.currentWorkspace}\n              placeData={this.state.placeData}\n            />\n         )} />\n\n        <Route path='/sign-up' render={() => (\n           <SignUp setUser={this.setUser} />\n         )} />\n\n         <Route path='/sign-in' render={() => (\n            <SignIn user={user} setUser={this.setUser} />\n          )} />\n\n          <Route user={user} path='/change-password' render={() => (\n              <ChangePassword user={user} />\n            )} />\n\n          <Route user={user} path='/sign-out' render={() => (\n              <SignOut clearUser={this.clearUser} user={user} />\n            )} />\n\n          <Route user={user} path='/nav' render={() => (\n              <Header clearUser={this.clearUser} user={user} />\n            )} />\n\n            <Route user={user} path='/create-workspace' render={() => (\n            <WorkSpaceCreate\n              user={user}\n              placeId={this.state.placeId}\n              placeData={this.state.placeData}\n              location={this.state.poiLocation}\n            />\n          )} />\n\n          <Route user={user} exact path='/suggestions' render={() => (\n              <SuggestionsList data={this.state.allData} />\n            )} />\n\n\n        <Route path='/'>\n          <div className=\"App\">\n            <NavBar />\n            <Search setApp={this.setState.bind(this)}\n                    mapCenter={this.state.mapCenter}\n            />\n            <GoogleMap\n              center={this.state.mapCenter}\n              coordinates={this.state.coordinates}\n              placeData={this.state.placeData}\n              //\n              setApp={this.setState.bind(this)}\n              allData={this.state.allData}\n              mapCenter={this.state.mapCenter}\n              poiLocation={this.state.poiLocation}\n              searchLocation={this.state.searchLocation}\n              userLocation={this.state.userLocation}\n            />\n\n          </div>\n        </Route>\n      </Fragment>\n      </div>\n\n\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}