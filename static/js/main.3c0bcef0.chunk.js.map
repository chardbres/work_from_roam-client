{"version":3,"sources":["components/Search.js","components/TestComponent.js","components/TestButton.js","components/PlacesDetail.js","apiConfig.js","components/GoogleMap.js","components/ReviewForm.js","api/auth.js","components/SignUp/SignUp.js","components/SignIn/SignIn.js","components/ChangePassword/ChangePassword.js","components/SignOut/SignOut.js","components/Header/Header.js","components/NavBar/NavBar.js","components/App.js","serviceWorker.js","index.js"],"names":["Search","props","setQuery","query","setState","handleAutocompleteSelect","a","geocodeByAddress","results","getLatLng","searchLocation","setApp","mapCenter","placeData","state","value","this","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","className","style","height","width","fontSize","placeholder","map","suggestion","active","backgroundColor","cursor","description","React","Component","GoogleApiWrapper","apiKey","process","TestComponent","test","formatted_address","rel","href","target","place_id","TestButton","url","executeTest","console","log","geocodeByPlaceId","placeId","then","to","PlacesDetail","placeImage","photos","getUrl","alt","src","name","reference","apiUrls","window","location","hostname","apiUrl","GoogleMap","componentDidMount","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","userLocation","axios","data","allData","work_spaces","onMarkerClick","marker","event","selectedMarker","showWindow","onInfoWindowClose","showPOI","poiLocation","latLng","service","google","maps","places","PlacesService","getDetails","fields","status","handleClick","center","initialCenter","zoom","clickableIcons","onClick","position","icon","visible","workSpace","onClose","ReviewForm","handleChange","handleSubmit","preventDefault","method","work_space","headers","Authorization","user","token","review","rating","note","work_space_id","id","display","catch","alert","closeWindow","redirect","placeName","float","onSubmit","type","min","max","required","signIn","credentials","email","password","SignUp","onSignUp","history","setUser","password_confirmation","passwordConfirmation","res","push","error","Form","Group","controlId","Label","Control","Button","variant","withRouter","SignIn","onSignIn","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","SignOut","clearUser","signOut","finally","authenticatedOptions","Nav","Link","unauthenticatedOptions","alwaysOptions","Header","Navbar","collapseOnSelect","fixed","bg","expand","Brand","color","Toggle","aria-controls","Collapse","NavBar","show","pathname","App","bounds","path","render","bind","coordinates","Boolean","match","appJsx","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c0bcef0.chunk.js","sourcesContent":["import React from 'react'\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'\nimport {GoogleApiWrapper} from 'google-maps-react'\nimport './Search.css'\n\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: ''\n        }\n    }\n\n// set query to find Place data\nsetQuery = query => {\n    this.setState({ query })\n}\n\n// send query to find Place data\n// use Place data to get coordinates\n// update state with coordinates and Place data\nhandleAutocompleteSelect = async query => {\n    const results = await geocodeByAddress(query)\n    const searchLocation = await getLatLng(results[0])\n    this.props.setApp({ searchLocation,\n                        mapCenter: searchLocation })\n    this.props.setApp({ placeData: results[0] })\n    this.setState({ query: '' })\n}\n\nrender() {\n    return (\n        <PlacesAutocomplete\n        value={this.state.query}\n        onChange={this.setQuery}\n        onSelect={this.handleAutocompleteSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <div className='search-bar'>\n          <input\n            style={{ height: '40px', width: '100%', fontSize: '16px' }}\n            {...getInputProps({\n              placeholder: 'Search Places ...',\n              className: 'location-search-input',\n            })}\n          />\n          <div className=\"autocomplete-dropdown-container\">\n            {loading && <div>Loading...</div>}\n            {suggestions.map(suggestion => {\n              const className = suggestion.active\n                ? 'suggestion-item--active'\n                : 'suggestion-item';\n              // inline style for demonstration purpose\n              const style = suggestion.active\n                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                : { backgroundColor: '#ffffff', cursor: 'pointer' };\n              return (\n                <div\n                  {...getSuggestionItemProps(suggestion, {\n                    className,\n                    style,\n                  })}\n                >\n                  <span>{suggestion.description}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n      </PlacesAutocomplete>\n    )\n}\n}\n\n\n\nexport default GoogleApiWrapper({\n  apiKey: (process.env.REACT_APP_GOOGLE_API_KEY)\n})(Search)\n","import React from 'react'\n\nclass TestComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: true\n        }\n    }\n    // render information inside an infoWindow for POI\n    render() {\n        return (\n            <div>\n                <h1>test component</h1>\n                <p>{this.props.placeData && this.props.placeData.formatted_address}</p>\n                <a rel=\"noopener noreferrer\" href={'https://developers.google.com/maps/documentation/javascript/tutorial'} target={'_blank'}>\n                  <button>display link to create a review</button>\n                </a>\n                <p>{this.props.placeData && this.props.placeData.place_id}</p>\n            </div>\n        )\n    }\n}\n\nexport default TestComponent\n","import React from 'react'\nimport { geocodeByPlaceId } from 'react-places-autocomplete'\nimport { HashRouter, Link } from 'react-router-dom'\n\n\nclass TestButton extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: true\n        }\n    }\n\n    componentDidMount() {\n        geocodeByPlaceId(this.props.placeId)\n            .then(console.log)\n    }\n\n    url = 'http://localhost:3000'\n\n    executeTest = () => {\n        console.log('test button')\n    }\n\n    // render information inside an infoWindow for POI\n\n    render() {\n        return (\n            <HashRouter>\n                <Link to='/new'>\n                    <button>Add a Review</button>\n                </Link>\n            </HashRouter>\n\n        )\n    }\n}\n\nexport default TestButton\n","import React from 'react'\nimport TestButton from './TestButton'\nimport PropTypes from 'prop-types'\n\nclass PlacesDetail extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            test: true\n        }\n    }\n\n    render() {\n        let placeImage = ''\n        // if data does not have any photos, display 'no image found' image\n        if (this.props.placeData && !this.props.placeData.photos) {\n            placeImage = 'https://1m19tt3pztls474q6z46fnk9-wpengine.netdna-ssl.com/wp-content/themes/unbound/images/No-Image-Found-400x264.png'\n        }\n        // if data includes photos, get url of the first photo\n        if (this.props.placeData && this.props.placeData.photos) {\n            placeImage = this.props.placeData.photos[0].getUrl()\n        }\n        let jsx\n        if (this.props.placeData) {\n            jsx = (\n                <div>\n\n                    <img height={'200px'} alt={'pic'} src={placeImage} />\n                    <h1>{this.props.placeData.name}</h1>\n                    <p><strong>google place_id: </strong>{this.props.placeData.reference || 'unknown'}</p>\n\n                    <TestButton placeId={this.props.placeData.reference}/>\n                </div>\n            )\n        } else {\n            jsx = (\n                <div>\n                    <h3>Loading...</h3>\n                </div>\n            )\n        }\n        return jsx\n    }\n}\n\nPlacesDetail.propTypes = {\n    placeData: PropTypes.object\n}\n\nexport default PlacesDetail\n","let apiUrl\nconst apiUrls = {\n  production: 'https://murmuring-anchorage-97253.herokuapp.com/',\n  development: 'http://localhost:3000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\n// hack to access production api from localhost\n// commment out or remove this line to access development api\napiUrl = apiUrls.production\n\nexport default apiUrl\n","import React from 'react'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react'\nimport TestComponent from './TestComponent'\nimport PlacesDetail from './PlacesDetail'\nimport axios from 'axios'\nimport apiUrl from '../apiConfig'\n\n\nclass GoogleMap extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            selectedMarker: null,\n            showWindow: false,\n            allData: []\n        }\n    }\n\n    // Using geolocation from browser to location user location\n    componentDidMount = () => {\n      if(navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n        console.log('found user location')\n        const coords = pos.coords\n        const lat = coords.latitude\n        const lng = coords.longitude\n        this.props.setApp({ userLocation: { lat, lng },\n                            mapCenter: { lat, lng } })\n        })\n      }\n      axios(apiUrl + '/work_spaces')\n        .then(data => {\n            // console.log(data)\n            this.setState({ allData: data.data.work_spaces })\n        })\n    }\n\n      // onClick handler to set marker to state and show corresponding info window\n    onMarkerClick = (props, marker, event) => {\n        this.setState({ selectedMarker: marker, showWindow: true })\n        console.log(marker.data)\n    }\n\n    // onClose handler for InfoWindow\n    onInfoWindowClose = () => {\n        this.setState({ showWindow: false })\n    }\n\n    showPOI = (map, event) => {\n        // declare function to handle data returned from service.getDetails()\n        const handleData = (data, status) => {\n            console.log(data)\n            // save data from places details to state.placeData\n            this.props.setApp({placeData: data})\n        }\n\n        // save the click location and reset place data\n\n        this.props.setApp({\n            poiLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() },\n            mapCenter: { lat: event.latLng.lat(), lng: event.latLng.lng() },\n            placeData: null,\n            placeId: event.placeId\n        })\n        // create new instance of class PlacesService to access google places api\n        const service = new this.props.google.maps.places.PlacesService(map)\n        console.log('service is:', service)\n\n        // call getDetails from google places api, passing placeId, fields to get data for, and above callback function to handle the response\n        service.getDetails(\n            {\n                placeId: event.placeId,\n                fields: ['name', 'website', 'formatted_phone_number', 'formatted_address', 'photo', 'reference', 'reviews']\n            },\n            handleData\n        )\n    }\n\n    handleClick = (props, map, event) => {\n        // if click event has a place id, get details on place and save data to state\n        if(event.placeId) {\n            // first save the location and place id to state. Clear data for place image and place data\n            this.showPOI(map, event)\n        }\n    }\n\n    render() {\n\n        return (\n            <Map google={this.props.google}\n             center={this.props.center}\n             initialCenter={this.props.center}\n             zoom={14}\n             clickableIcons={true}\n\n             onClick={this.handleClick}\n            >\n            <Marker\n              name={'user location'}\n              position={this.userLocation}\n              icon={{url:'http://maps.google.com/mapfiles/ms/icons/green-dot.png'}}\n            />\n\n            <Marker name={'search result'}\n                    position={this.props.searchLocation}\n                    icon={{url:'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'}}\n                    />\n\n                {/* info window for poi locations */}\n                <InfoWindow\n                    position={this.props.poiLocation}\n                    visible={true}\n                >\n                    <PlacesDetail placeData={this.props.placeData} />\n                </InfoWindow>\n\n                {this.state.allData.map(workSpace => (\n                    <Marker onClick={this.onMarkerClick}\n                        position={{ lat: workSpace.lat, lng: workSpace.lng}}\n                        placeId={workSpace.placeId}\n                        data={workSpace}\n                        name={'Current location'}\n                    />\n                ))}\n\n\n                {/* InfoWindow becomes visible when this.state.showWindow === true */}\n                <InfoWindow marker={this.state.selectedMarker}\n                        visible={this.state.showWindow}\n                        onClose={this.onInfoWindowClose}\n                >\n                    {/* Display placeData information inside InfoWindow */}\n                    <TestComponent placeData={this.props.placeData} />\n\n                </InfoWindow>\n\n            </Map>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (process.env.REACT_APP_GOOGLE_API_KEY)\n  })(GoogleMap)\n","import React from 'react';\nimport './ReviewForm.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport apiUrl from '../apiConfig'\nimport TestButton from './TestButton'\n\n  class ReviewForm extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        rating: 3,\n        review: '',\n        display: 'block',\n        redirect: false\n      }\n    }\n\n    componentDidMount() {\n      console.log('reviewform data', this.props.placeData)\n      console.log('hello')\n    }\n\n    handleChange = (event) => {\n      console.log(event.target.value)\n      console.log(event.target.name)\n      this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n      // 1. create a workspace\n      axios({\n        method: 'post',\n        url: apiUrl + '/work_spaces',\n        data: {\n          work_space: {\n            place_id: this.props.placeId,\n            lat: this.props.location.lat,\n            lng: this.props.location.lng\n          }\n        },\n        headers: {\n          Authorization: `Token token=${this.props.user.token}`\n        }\n\n      })\n      // 2. create a review associated with the new workspace\n      .then(data => {\n        console.log(data)\n        axios({\n          method: 'post',\n          url: apiUrl + '/reviews',\n          data: {\n            review: {\n              rating: this.state.rating,\n              note: this.state.review,\n              work_space_id: data.data.work_space.id\n            }\n          },\n          headers: {\n            Authorization: `Token token=${this.props.user.token}`\n          }\n        })\n        .then(data => {\n          console.log(data)\n          this.setState({ display: 'none' })\n        })\n      })\n      // 3. redirect to '/' and close the review form\n\n      .catch(() => alert('create review failed'))\n    }\n\n    closeWindow = () => {\n      // update state which updates component's style to diplay: none\n      this.setState({ display: 'none' })\n    }\n\n    render () {\n      let placeName = ''\n      // if user is not signed in, redirect to '/sign-in'\n\n      if (this.props.placeData && this.props.placeData.name) {\n        placeName =\n        this.props.placeData.name\n\n      }\n\n      let placeImage = ''\n\n      if (this.props.placeData && !this.props.placeData.photos) {\n        placeImage = this.props.placeData.photos[0].getUrl()\n\n}\n\n\n        if (!this.props.user) {\n          return (<Redirect to='/sign-in'/>)\n        }\n\n      return (\n\n          <div className='review-form' style={{display: this.state.display}}>\n\n          <Link to='/'>\n            <button style={{float: 'right'}} onClick={this.closeWindow}>Close</button>\n          </Link>\n\n          <h1> Review {placeName} {placeImage} </h1>\n\n            <form onSubmit={this.handleSubmit}>\n\n              <label> Rating: </label>\n              <input name=\"rating\" type=\"range\" min=\"0\" max=\"5\" value={this.state.rating} onChange={this.handleChange}/>\n              <p>{this.state.rating}</p>\n\n              <label> Review: </label>\n              <textarea name=\"review\" value={this.state.review} onChange={this.handleChange} required/>\n              <button> Submit </button>\n\n            </form>\n          </div>\n      )\n    }\n  }\n\n\n\n\n  export default ReviewForm;\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = credentials => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = credentials => {\n  return axios({\n    url: apiUrl + '/sign-in',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios({\n    url: apiUrl + '/sign-out',\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Token token=${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password',\n    method: 'PATCH',\n    headers: {\n      'Authorization': `Token token=${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport './SignUp.css'\n\nclass SignUp extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onSignUp = event => {\n    event.preventDefault()\n\n    const { history, setUser } = this.props\n\n    signUp(this.state)\n      .then(() => signIn(this.state))\n      .then(res => setUser(res.data.user))\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ email: '', password: '', passwordConfirmation: '' })\n      })\n      console.log('signUp: ' + this.state.email)\n  }\n\n  render () {\n    const { email, password, passwordConfirmation } = this.state\n\n    return (\n      <div className=\"row body sign-up\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <Link to='/'>\n            <button style={{float: 'right'}} onClick={this.closeWindow}>Close</button>\n          </Link>\n          <h3>Sign Up</h3>\n          <Form onSubmit={this.onSignUp}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"passwordConfirmation\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                required\n                name=\"passwordConfirmation\"\n                value={passwordConfirmation}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SignUp)\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport './SignIn.css'\n\nclass SignIn extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onSignIn = event => {\n    event.preventDefault()\n    const { history, setUser } = this.props\n    signIn(this.state)\n      .then(res => setUser(res.data.user))\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ email: '', password: '' })\n      })\n      console.log('SignIn: ' + this.state.email)\n  }\n\n  render () {\n    const { email, password } = this.state\n\n    return (\n      <div className=\"row sign-in\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <Link to='/'>\n            <button style={{float: 'right'}} onClick={this.closeWindow}>Close</button>\n          </Link>\n          <h3>Sign In</h3>\n          <Form onSubmit={this.onSignIn}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SignIn)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport './ChangePassword.css'\n\nclass ChangePassword extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onChangePassword = event => {\n    event.preventDefault()\n\n    const { history, user } = this.props\n\n    changePassword(this.state, user)\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ oldPassword: '', newPassword: '' })\n      })\n  }\n\n  render () {\n    const { oldPassword, newPassword } = this.state\n\n    return (\n      <div className=\"row change-password\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <h3>Change Password</h3>\n          <Form onSubmit={this.onChangePassword}>\n            <Form.Group controlId=\"oldPassword\">\n              <Form.Label>Old password</Form.Label>\n              <Form.Control\n                required\n                name=\"oldPassword\"\n                value={oldPassword}\n                type=\"password\"\n                placeholder=\"Old Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"newPassword\">\n              <Form.Label>New Password</Form.Label>\n              <Form.Control\n                required\n                name=\"newPassword\"\n                value={newPassword}\n                type=\"password\"\n                placeholder=\"New Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ChangePassword)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n      console.log('Signout worked!!')\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport './Header.css'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <Nav.Link href=\"#change-password\">Change Password</Nav.Link>\n    <Nav.Link href=\"#sign-out\">Sign Out</Nav.Link>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <Nav.Link href=\"#sign-up\">Sign Up</Nav.Link>\n    <Nav.Link href=\"#sign-in\">Sign In</Nav.Link>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <Nav.Link href=\"#/\">Home</Nav.Link>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar className=\"header\" collapseOnSelect fixed=\"top\" bg=\"secondary\" variant=\"dark\" expand=\"md\">\n    <Navbar.Brand href=\"#\">\n      WorkFromRoam\n    </Navbar.Brand>\n    <Nav>\n      { user && <span style={{ color: 'black' }} className=\"navbar-text mr-2\">Welcome, {user.email}</span>}\n    </Nav>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"ml-auto\">\n        { alwaysOptions }\n        { user ? authenticatedOptions : unauthenticatedOptions }\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","import React from 'react'\nimport { HashRouter, Link, withRouter } from 'react-router-dom'\n\nimport './NavBar.css'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            show: true\n        }\n    }\n    handleClick = event => {\n      this.setState({ show: !this.state.show })\n    }\n\n    render() {\n      let redirect = ''\n      if (this.props.location.pathname === '/') {\n        redirect = '/nav'\n      } else {\n        redirect ='/'\n      }\n        return (\n            <HashRouter>\n              <Link to={redirect}>\n                <img onClick={this.handleClick} className=\"nav-bar\" src=\"ROME.png\" alt=\"nav-bar\" />\n              </Link>\n            </HashRouter>\n        )\n    }\n}\n\nexport default withRouter(NavBar)\n","import React, { Fragment } from 'react';\nimport '../App.css';\nimport Search from './Search'\nimport GoogleMap from './GoogleMap';\nimport ReviewForm from './ReviewForm';\nimport SignUp from './SignUp/SignUp'\nimport SignIn from './SignIn/SignIn'\nimport ChangePassword from './ChangePassword/ChangePassword'\nimport SignOut from './SignOut/SignOut'\nimport Header from './Header/Header'\nimport { Route } from 'react-router-dom'\nimport NavBar from './NavBar/NavBar'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      poiLocation: null,\n      mapCenter: { lat: 42.3601, lng: -71.0589},\n      bounds: null,\n      placeId: null,\n      placeData: null,\n      searchLocation: null,\n      //\n\n      user: null,\n      userLocation: null\n    }\n  }\n\n  setUser = user => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n\n  render() {\n\n    const { user } = this.state\n\n    return (\n<div>\n<Fragment>\n\n        <Route path='/new'>\n          <ReviewForm\n            user={user}\n            placeId={this.state.placeId}\n            placeData={this.state.placeData}\n            location={this.state.poiLocation}\n          />\n        </Route>\n\n        <Route path='/sign-up' render={() => (\n           <SignUp setUser={this.setUser} />\n         )} />\n\n         <Route path='/sign-in' render={() => (\n            <SignIn user={user} setUser={this.setUser} />\n          )} />\n\n          <Route user={user} path='/change-password' render={() => (\n              <ChangePassword user={user} />\n            )} />\n\n          <Route user={user} path='/sign-out' render={() => (\n              <SignOut clearUser={this.clearUser} user={user} />\n            )} />\n\n          <Route user={user} path='/nav' render={() => (\n              <Header clearUser={this.clearUser} user={user} />\n            )} />\n\n\n        <Route path='/'>\n          <div className=\"App\">\n            <NavBar />\n            <Search setApp={this.setState.bind(this)}\n                    mapCenter={this.state.mapCenter}\n            />\n            <GoogleMap\n              center={this.state.mapCenter}\n              coordinates={this.state.coordinates}\n              placeData={this.state.placeData}\n              //\n              setApp={this.setState.bind(this)}\n              mapCenter={this.state.mapCenter}\n              poiLocation={this.state.poiLocation}\n              searchLocation={this.state.searchLocation}\n              userLocation={this.state.userLocation}\n            />\n\n          </div>\n        </Route>\n      </Fragment>\n      </div>\n\n\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}